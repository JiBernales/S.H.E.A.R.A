
      List<helpSignal> helpSignals = await helpSignalsDatabase.instance.getAllHelpSignals();
      for (var signal in helpSignals) {
        Color markerColor = Colors.blue;

        if (signal.urgencyLevel == "Advisory") {
          markerColor = Colors.blue;
        }
        else if (signal.urgencyLevel == "Low") {
          markerColor = Color.fromARGB(255, 59, 200, 8);
        }
        else if (signal.urgencyLevel == "Medium") {
          markerColor = Color.fromARGB(255, 224, 192, 8);
        }
        else if (signal.urgencyLevel == "High") {
          markerColor = Color.fromARGB(255, 226, 105, 5);
        }
        else if (signal.urgencyLevel == "Critical") {
          markerColor = Color.fromARGB(255, 222, 11, 11);
        }

        double lats = signal.lastSeenLatitude ?? 0.0;
        double longs = signal.lastSeenLongitude ?? 0.0;
        markers.add(
          Marker(
              width: 40.0,
              height: 40.0,
              point: LatLng(lats, longs),
              child: Icon(
                Icons.location_pin,
                color: markerColor,
              ),
            ),
          );
          }


          Future _loadHelpSignals(List<Marker> _mapMarkers) async {
              List<Marker> markers = [];
              try {
                markers.add(
                  Marker(
                    width: 50.0,
                    height: 50.0,
                    point: LatLng(_currentLocation.latitude!, _currentLocation.longitude!),
                    child: Icon(
                      Icons.location_pin,
                      color: Colors.black,
                    ),
                  ),
                );
              }
              catch (e) {
                print('Error loading help signals: $e');
              }

              setState(() {
                _mapMarkers = markers;
              });
            }