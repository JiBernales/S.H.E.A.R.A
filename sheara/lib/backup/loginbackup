import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';
import 'package:sqflite/sqflite.dart';
import 'mapScreen.dart';
import 'registration.dart';
import '../model/account.dart';
import '../database/accountsDatabase.dart';

class LoginScreen extends StatefulWidget {
  @override
  _LoginScreenState createState() => _LoginScreenState();
}

class _LoginScreenState extends State<LoginScreen> {
  String _selectedUserType = 'Student'; // Default user type

  TextEditingController _idxController = TextEditingController();
  TextEditingController _passwordController = TextEditingController();

  void _showSnackBar(String message) {
    ScaffoldMessenger.of(context).showSnackBar(SnackBar(content: Text(message)));
  }

  Future<void> _performLogin() async {
    String idx = _idxController.text;
    String password = _passwordController.text;

    if (idx.isEmpty || password.isEmpty) {
      _showSnackBar('Please fill out all the fields.');
      return;
    }

    int? idNumber;
    idNumber = int.tryParse(idx);

    if (idNumber == null || idNumber <= 0) {
      _showSnackBar('Invalid ID number. Please try again.');
      return;
    }

    bool isStudent = _selectedUserType == 'Student';

    account? existingAccount = await accountsDatabase.instance.getAccount(idNumber, isStudent, password);

    if (existingAccount != null) {
      _showSnackBar('Login successful! Welcome, ${existingAccount.dispname}!');
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => MapScreen(currentUser: existingAccount)),
      );
    } else {
      _showSnackBar('Invalid credentials. Please try again.');
    }
  }


  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Login'),
      ),
      body: SingleChildScrollView(
        child: Padding(
          padding: EdgeInsets.symmetric(vertical: 100.0, horizontal: 50.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: <Widget>[
              SizedBox(height: 20),
              TextField(
                controller: _idxController,
                keyboardType: TextInputType.number,
                decoration: InputDecoration(
                  labelText: _selectedUserType == 'Student'
                      ? 'Student ID'
                      : 'Employee ID',
                ),
              ),
              SizedBox(height: 20),
              TextField(
                controller: _passwordController,
                obscureText: true,
                decoration: InputDecoration(
                  labelText: 'Password',
                ),
              ),
              SizedBox(height: 20),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                children: <Widget>[
                  Column(
                    children: [
                      Radio(
                        value: 'Student',
                        groupValue: _selectedUserType,
                        onChanged: (value) {
                          setState(() {
                            _selectedUserType = value.toString();
                          });
                        },
                      ),
                      Text('Student'),
                    ],
                  ),
                  Column(
                    children: [
                      Radio(
                        value: 'Employee',
                        groupValue: _selectedUserType,
                        onChanged: (value) {
                          setState(() {
                            _selectedUserType = value.toString();
                          });
                        },
                      ),
                      Text('Employee'),
                    ],
                  ),
                ],
              ),
              SizedBox(height: 20),
              Center(
                child: ElevatedButton(
                  onPressed: _performLogin,
                  child: Text('Login'),
                ),
              ),
              SizedBox(height: 10),
              Center(
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: <Widget>[
                    Text("Don't have an account? ", style: TextStyle(color: Colors.black),
                    ),
                    GestureDetector(
                      onTap: () {
                        Navigator.push(
                          context,
                          MaterialPageRoute(builder: (context) => RegistrationScreen()),
                        );
                      },
                      child: Text("Register",style: TextStyle(color: Colors.blue,),),
                    ),
                  ],
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }
}